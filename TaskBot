#Импорты
import telebot
import config
import sqlite3


#Вывод списка задач
bot = telebot.TeleBot(config.token)
@bot.message_handler(commands=['tsk'])
def lis(message):
	#Подключение или создание БДы
	con = sqlite3.connect("Tasks.db")
	cur = con.cursor()
	cur.execute("CREATE TABLE IF NOT EXISTS nic (id INTEGER PRIMARY KEY, p1 TEXT)")
	#Выгрузка и формирование списка БДы
	new = []
	for i in cur.execute("SELECT * FROM nic"):
		i = str("{}. {}".format(i[0],i[1]))
		new.append(i)
	#Форматирование списка для вывода
	sp = '\n'.join(new)
	print(sp)
	con.commit()
	cur.close()
	con.close()
	bot.send_message(message.chat.id, sp, None)
	return

#Добавление задачи
@bot.message_handler(commands=['ntsk'])
def new_task(message):
	bot.send_message(message.chat.id, "Введите новую задачу:", None)
#Получение ответа пользователя
	@bot.message_handler(func=lambda message: True, content_types=['text'])
	def ntask(message):
#Апаем БДу
		answer = message.text
		con = sqlite3.connect("Tasks.db")
		cur = con.cursor()
		cur.execute("INSERT INTO nic(id,p1) VALUES(NULL, %r)" %answer)
		con.commit()
		cur.close()
		con.close()
		bot.send_message(message.chat.id, "ЗАДАЧА СОЗДАНА", None)
		lis(message)

#Удаление задачи
@bot.message_handler(commands=['dtsk'])
def del_task(message):
	bot.send_message(message.chat.id, "Введите номер удаляемой задачи:", None)
#Получение ответа пользователя
	@bot.message_handler(func=lambda message: True, content_types=['text'])
	def dtask(message):
#Апаем БДу
		num = message.text
		con = sqlite3.connect("Tasks.db")
		cur = con.cursor()
		cur.execute("DELETE FROM nic WHERE id=%r" %num)
		con.commit()
		cur.close()
		con.close()
		bot.send_message(message.chat.id, "ЗАДАЧА УДАЛЕНА", None)
		lis(message)


if __name__ == '__main__':
	bot.polling(none_stop=True)


